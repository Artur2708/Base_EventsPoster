//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Base_EventsPoster
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class EventsPoster2Entities : DbContext
    {
        public EventsPoster2Entities()
            : base("name=EventsPoster2Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<Archive> Archive { get; set; }
        public virtual DbSet<Clients> Clients { get; set; }
        public virtual DbSet<Clients_Event_> Clients_Event_ { get; set; }
        public virtual DbSet<Event_> Event_ { get; set; }
        public virtual DbSet<Pictures_Client> Pictures_Client { get; set; }
        public virtual DbSet<Pictures_Event> Pictures_Event { get; set; }
        public virtual DbSet<Price> Price { get; set; }
        public virtual DbSet<Сategories> Сategories { get; set; }
    
        public virtual ObjectResult<Active_client_sp_Result> Active_client_sp()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Active_client_sp_Result>("Active_client_sp");
        }
    
        public virtual ObjectResult<Actual_events_sp_Result> Actual_events_sp()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Actual_events_sp_Result>("Actual_events_sp");
        }
    
        public virtual ObjectResult<Event_for_today_sp_Result> Event_for_today_sp()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Event_for_today_sp_Result>("Event_for_today_sp");
        }
    
        public virtual ObjectResult<Sold_in_3_days_sp_Result> Sold_in_3_days_sp()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sold_in_3_days_sp_Result>("Sold_in_3_days_sp");
        }
    
        public virtual ObjectResult<Sold_out_all_tickets_sp_Result> Sold_out_all_tickets_sp()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sold_out_all_tickets_sp_Result>("Sold_out_all_tickets_sp");
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual ObjectResult<stp_Actual_Event_for_Client_Result> stp_Actual_Event_for_Client(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stp_Actual_Event_for_Client_Result>("stp_Actual_Event_for_Client", iDParameter);
        }
    
        public virtual ObjectResult<stp_Cat_Event_Result> stp_Cat_Event(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stp_Cat_Event_Result>("stp_Cat_Event", idParameter);
        }
    
        public virtual ObjectResult<stp_Client_Event_Result> stp_Client_Event(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stp_Client_Event_Result>("stp_Client_Event", iDParameter);
        }
    
        public virtual ObjectResult<stp_Clients_Event_Search_Client_Id_Result> stp_Clients_Event_Search_Client_Id(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stp_Clients_Event_Search_Client_Id_Result>("stp_Clients_Event_Search_Client_Id", iDParameter);
        }
    
        public virtual ObjectResult<stp_Clients_Event_Search_Event_id_Result> stp_Clients_Event_Search_Event_id(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stp_Clients_Event_Search_Event_id_Result>("stp_Clients_Event_Search_Event_id", iDParameter);
        }
    
        public virtual int stp_Del_Archive(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("stp_Del_Archive", iDParameter);
        }
    
        public virtual int stp_Del_Cat(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("stp_Del_Cat", iDParameter);
        }
    
        public virtual int stp_Delete_Client(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("stp_Delete_Client", iDParameter);
        }
    
        public virtual int stp_Delete_Date(Nullable<System.DateTime> dateFinish)
        {
            var dateFinishParameter = dateFinish.HasValue ?
                new ObjectParameter("DateFinish", dateFinish) :
                new ObjectParameter("DateFinish", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("stp_Delete_Date", dateFinishParameter);
        }
    
        public virtual int stp_Delete_Event_(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("stp_Delete_Event_", iDParameter);
        }
    
        public virtual int stp_Delete_Pictures_Client(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("stp_Delete_Pictures_Client", idParameter);
        }
    
        public virtual int stp_Delete_Pictures_Event(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("stp_Delete_Pictures_Event", idParameter);
        }
    
        public virtual int stp_Delete_Price(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("stp_Delete_Price", idParameter);
        }
    
        public virtual int stp_Delete_Ticket(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("stp_Delete_Ticket", iDParameter);
        }
    
        public virtual int stp_Delete_Ticket_Client_info(Nullable<int> iD_Client, Nullable<int> iD_Event)
        {
            var iD_ClientParameter = iD_Client.HasValue ?
                new ObjectParameter("ID_Client", iD_Client) :
                new ObjectParameter("ID_Client", typeof(int));
    
            var iD_EventParameter = iD_Event.HasValue ?
                new ObjectParameter("ID_Event", iD_Event) :
                new ObjectParameter("ID_Event", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("stp_Delete_Ticket_Client_info", iD_ClientParameter, iD_EventParameter);
        }
    
        public virtual ObjectResult<stp_Event_Category_Id_Result> stp_Event_Category_Id(Nullable<int> id_cat, Nullable<int> id)
        {
            var id_catParameter = id_cat.HasValue ?
                new ObjectParameter("id_cat", id_cat) :
                new ObjectParameter("id_cat", typeof(int));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stp_Event_Category_Id_Result>("stp_Event_Category_Id", id_catParameter, idParameter);
        }
    
        public virtual ObjectResult<stp_Event_City_Result> stp_Event_City(string city, Nullable<int> id)
        {
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stp_Event_City_Result>("stp_Event_City", cityParameter, idParameter);
        }
    
        public virtual ObjectResult<stp_Event_Client_Result> stp_Event_Client(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stp_Event_Client_Result>("stp_Event_Client", iDParameter);
        }
    
        public virtual int stp_Event_Count(Nullable<int> iD_client, ObjectParameter count_)
        {
            var iD_clientParameter = iD_client.HasValue ?
                new ObjectParameter("ID_client", iD_client) :
                new ObjectParameter("ID_client", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("stp_Event_Count", iD_clientParameter, count_);
        }
    
        public virtual ObjectResult<stp_Event_dateNow_Result> stp_Event_dateNow(Nullable<int> id, Nullable<System.DateTime> date)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stp_Event_dateNow_Result>("stp_Event_dateNow", idParameter, dateParameter);
        }
    
        public virtual ObjectResult<stp_info_Archive_Result> stp_info_Archive()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stp_info_Archive_Result>("stp_info_Archive");
        }
    
        public virtual ObjectResult<stp_Info_client_Result> stp_Info_client()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stp_Info_client_Result>("stp_Info_client");
        }
    
        public virtual ObjectResult<stp_info_Client_Event__Result> stp_info_Client_Event_()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stp_info_Client_Event__Result>("stp_info_Client_Event_");
        }
    
        public virtual ObjectResult<stp_info_Event_Result> stp_info_Event()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stp_info_Event_Result>("stp_info_Event");
        }
    
        public virtual ObjectResult<stp_info_Сategories_Result> stp_info_Сategories()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stp_info_Сategories_Result>("stp_info_Сategories");
        }
    
        public virtual int stp_insert_Archive(string name_Event, Nullable<int> event_Category_Id, Nullable<System.DateTime> date_Start, Nullable<System.DateTime> date_Finish, string сity, string place, Nullable<System.TimeSpan> time_, string event_description, Nullable<int> age_limitation, Nullable<int> maximum_count_tickets, Nullable<int> purchased_count_tickets)
        {
            var name_EventParameter = name_Event != null ?
                new ObjectParameter("Name_Event", name_Event) :
                new ObjectParameter("Name_Event", typeof(string));
    
            var event_Category_IdParameter = event_Category_Id.HasValue ?
                new ObjectParameter("Event_Category_Id", event_Category_Id) :
                new ObjectParameter("Event_Category_Id", typeof(int));
    
            var date_StartParameter = date_Start.HasValue ?
                new ObjectParameter("Date_Start", date_Start) :
                new ObjectParameter("Date_Start", typeof(System.DateTime));
    
            var date_FinishParameter = date_Finish.HasValue ?
                new ObjectParameter("Date_Finish", date_Finish) :
                new ObjectParameter("Date_Finish", typeof(System.DateTime));
    
            var сityParameter = сity != null ?
                new ObjectParameter("Сity", сity) :
                new ObjectParameter("Сity", typeof(string));
    
            var placeParameter = place != null ?
                new ObjectParameter("Place", place) :
                new ObjectParameter("Place", typeof(string));
    
            var time_Parameter = time_.HasValue ?
                new ObjectParameter("Time_", time_) :
                new ObjectParameter("Time_", typeof(System.TimeSpan));
    
            var event_descriptionParameter = event_description != null ?
                new ObjectParameter("Event_description", event_description) :
                new ObjectParameter("Event_description", typeof(string));
    
            var age_limitationParameter = age_limitation.HasValue ?
                new ObjectParameter("Age_limitation", age_limitation) :
                new ObjectParameter("Age_limitation", typeof(int));
    
            var maximum_count_ticketsParameter = maximum_count_tickets.HasValue ?
                new ObjectParameter("Maximum_count_tickets", maximum_count_tickets) :
                new ObjectParameter("Maximum_count_tickets", typeof(int));
    
            var purchased_count_ticketsParameter = purchased_count_tickets.HasValue ?
                new ObjectParameter("Purchased_count_tickets", purchased_count_tickets) :
                new ObjectParameter("Purchased_count_tickets", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("stp_insert_Archive", name_EventParameter, event_Category_IdParameter, date_StartParameter, date_FinishParameter, сityParameter, placeParameter, time_Parameter, event_descriptionParameter, age_limitationParameter, maximum_count_ticketsParameter, purchased_count_ticketsParameter);
        }
    
        public virtual int stp_Insert_Cat(string category)
        {
            var categoryParameter = category != null ?
                new ObjectParameter("Category", category) :
                new ObjectParameter("Category", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("stp_Insert_Cat", categoryParameter);
        }
    
        public virtual int stp_Insert_Client(string firstName, string lastName, Nullable<System.DateTime> bD, string email)
        {
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var bDParameter = bD.HasValue ?
                new ObjectParameter("BD", bD) :
                new ObjectParameter("BD", typeof(System.DateTime));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("stp_Insert_Client", firstNameParameter, lastNameParameter, bDParameter, emailParameter);
        }
    
        public virtual int stp_Insert_Event(string name_Event, Nullable<int> event_Category_Id, Nullable<System.DateTime> date_Start, Nullable<System.DateTime> date_Finish, string сity, string place, Nullable<System.TimeSpan> time_, string event_description, Nullable<int> age_limitation, Nullable<int> maximum_count_tickets, Nullable<int> purchased_count_tickets, Nullable<int> price_id)
        {
            var name_EventParameter = name_Event != null ?
                new ObjectParameter("Name_Event", name_Event) :
                new ObjectParameter("Name_Event", typeof(string));
    
            var event_Category_IdParameter = event_Category_Id.HasValue ?
                new ObjectParameter("Event_Category_Id", event_Category_Id) :
                new ObjectParameter("Event_Category_Id", typeof(int));
    
            var date_StartParameter = date_Start.HasValue ?
                new ObjectParameter("Date_Start", date_Start) :
                new ObjectParameter("Date_Start", typeof(System.DateTime));
    
            var date_FinishParameter = date_Finish.HasValue ?
                new ObjectParameter("Date_Finish", date_Finish) :
                new ObjectParameter("Date_Finish", typeof(System.DateTime));
    
            var сityParameter = сity != null ?
                new ObjectParameter("Сity", сity) :
                new ObjectParameter("Сity", typeof(string));
    
            var placeParameter = place != null ?
                new ObjectParameter("Place", place) :
                new ObjectParameter("Place", typeof(string));
    
            var time_Parameter = time_.HasValue ?
                new ObjectParameter("Time_", time_) :
                new ObjectParameter("Time_", typeof(System.TimeSpan));
    
            var event_descriptionParameter = event_description != null ?
                new ObjectParameter("Event_description", event_description) :
                new ObjectParameter("Event_description", typeof(string));
    
            var age_limitationParameter = age_limitation.HasValue ?
                new ObjectParameter("Age_limitation", age_limitation) :
                new ObjectParameter("Age_limitation", typeof(int));
    
            var maximum_count_ticketsParameter = maximum_count_tickets.HasValue ?
                new ObjectParameter("Maximum_count_tickets", maximum_count_tickets) :
                new ObjectParameter("Maximum_count_tickets", typeof(int));
    
            var purchased_count_ticketsParameter = purchased_count_tickets.HasValue ?
                new ObjectParameter("Purchased_count_tickets", purchased_count_tickets) :
                new ObjectParameter("Purchased_count_tickets", typeof(int));
    
            var price_idParameter = price_id.HasValue ?
                new ObjectParameter("Price_id", price_id) :
                new ObjectParameter("Price_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("stp_Insert_Event", name_EventParameter, event_Category_IdParameter, date_StartParameter, date_FinishParameter, сityParameter, placeParameter, time_Parameter, event_descriptionParameter, age_limitationParameter, maximum_count_ticketsParameter, purchased_count_ticketsParameter, price_idParameter);
        }
    
        public virtual int stp_insert_Pictures_Client(Nullable<int> clientID, string name_, byte[] picture)
        {
            var clientIDParameter = clientID.HasValue ?
                new ObjectParameter("ClientID", clientID) :
                new ObjectParameter("ClientID", typeof(int));
    
            var name_Parameter = name_ != null ?
                new ObjectParameter("Name_", name_) :
                new ObjectParameter("Name_", typeof(string));
    
            var pictureParameter = picture != null ?
                new ObjectParameter("Picture", picture) :
                new ObjectParameter("Picture", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("stp_insert_Pictures_Client", clientIDParameter, name_Parameter, pictureParameter);
        }
    
        public virtual int stp_insert_Pictures_Event(Nullable<int> eventID, string name_, byte[] picture)
        {
            var eventIDParameter = eventID.HasValue ?
                new ObjectParameter("EventID", eventID) :
                new ObjectParameter("EventID", typeof(int));
    
            var name_Parameter = name_ != null ?
                new ObjectParameter("Name_", name_) :
                new ObjectParameter("Name_", typeof(string));
    
            var pictureParameter = picture != null ?
                new ObjectParameter("Picture", picture) :
                new ObjectParameter("Picture", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("stp_insert_Pictures_Event", eventIDParameter, name_Parameter, pictureParameter);
        }
    
        public virtual int stp_insert_Price(Nullable<decimal> min_, Nullable<decimal> ave, Nullable<decimal> max_)
        {
            var min_Parameter = min_.HasValue ?
                new ObjectParameter("Min_", min_) :
                new ObjectParameter("Min_", typeof(decimal));
    
            var aveParameter = ave.HasValue ?
                new ObjectParameter("Ave", ave) :
                new ObjectParameter("Ave", typeof(decimal));
    
            var max_Parameter = max_.HasValue ?
                new ObjectParameter("Max_", max_) :
                new ObjectParameter("Max_", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("stp_insert_Price", min_Parameter, aveParameter, max_Parameter);
        }
    
        public virtual int stp_Insert_Ticket(Nullable<int> event_id, Nullable<int> client_Id, Nullable<decimal> price, Nullable<System.DateTime> purchase_date)
        {
            var event_idParameter = event_id.HasValue ?
                new ObjectParameter("Event_id", event_id) :
                new ObjectParameter("Event_id", typeof(int));
    
            var client_IdParameter = client_Id.HasValue ?
                new ObjectParameter("Client_Id", client_Id) :
                new ObjectParameter("Client_Id", typeof(int));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(decimal));
    
            var purchase_dateParameter = purchase_date.HasValue ?
                new ObjectParameter("Purchase_date", purchase_date) :
                new ObjectParameter("Purchase_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("stp_Insert_Ticket", event_idParameter, client_IdParameter, priceParameter, purchase_dateParameter);
        }
    
        public virtual ObjectResult<stp_Name_Event_Result> stp_Name_Event(string symbol)
        {
            var symbolParameter = symbol != null ?
                new ObjectParameter("symbol", symbol) :
                new ObjectParameter("symbol", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stp_Name_Event_Result>("stp_Name_Event", symbolParameter);
        }
    
        public virtual ObjectResult<stp_Price_Event__Result> stp_Price_Event_(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stp_Price_Event__Result>("stp_Price_Event_", iDParameter);
        }
    
        public virtual ObjectResult<stp_Price_Event_Search_Result> stp_Price_Event_Search(Nullable<int> id, Nullable<decimal> price)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stp_Price_Event_Search_Result>("stp_Price_Event_Search", idParameter, priceParameter);
        }
    
        public virtual ObjectResult<stp_Select_ID_Archive_Result> stp_Select_ID_Archive(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stp_Select_ID_Archive_Result>("stp_Select_ID_Archive", iDParameter);
        }
    
        public virtual ObjectResult<stp_SelID_Client_Event_Result> stp_SelID_Client_Event(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stp_SelID_Client_Event_Result>("stp_SelID_Client_Event", iDParameter);
        }
    
        public virtual ObjectResult<stp_Ticket_for_cat_Result> stp_Ticket_for_cat(Nullable<int> id_cat)
        {
            var id_catParameter = id_cat.HasValue ?
                new ObjectParameter("id_cat", id_cat) :
                new ObjectParameter("id_cat", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stp_Ticket_for_cat_Result>("stp_Ticket_for_cat", id_catParameter);
        }
    
        public virtual int stp_Ticket_Update_Event(Nullable<int> iD_Event, Nullable<int> num)
        {
            var iD_EventParameter = iD_Event.HasValue ?
                new ObjectParameter("ID_Event", iD_Event) :
                new ObjectParameter("ID_Event", typeof(int));
    
            var numParameter = num.HasValue ?
                new ObjectParameter("num", num) :
                new ObjectParameter("num", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("stp_Ticket_Update_Event", iD_EventParameter, numParameter);
        }
    
        public virtual int stp_Update_Archive(Nullable<int> iD, string name_Event, Nullable<int> event_Category_Id, Nullable<System.DateTime> date_Start, Nullable<System.DateTime> date_Finish, string сity, string place, Nullable<System.TimeSpan> time_, string event_description, Nullable<int> age_limitation, Nullable<int> maximum_count_tickets, Nullable<int> purchased_count_tickets)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var name_EventParameter = name_Event != null ?
                new ObjectParameter("Name_Event", name_Event) :
                new ObjectParameter("Name_Event", typeof(string));
    
            var event_Category_IdParameter = event_Category_Id.HasValue ?
                new ObjectParameter("Event_Category_Id", event_Category_Id) :
                new ObjectParameter("Event_Category_Id", typeof(int));
    
            var date_StartParameter = date_Start.HasValue ?
                new ObjectParameter("Date_Start", date_Start) :
                new ObjectParameter("Date_Start", typeof(System.DateTime));
    
            var date_FinishParameter = date_Finish.HasValue ?
                new ObjectParameter("Date_Finish", date_Finish) :
                new ObjectParameter("Date_Finish", typeof(System.DateTime));
    
            var сityParameter = сity != null ?
                new ObjectParameter("Сity", сity) :
                new ObjectParameter("Сity", typeof(string));
    
            var placeParameter = place != null ?
                new ObjectParameter("Place", place) :
                new ObjectParameter("Place", typeof(string));
    
            var time_Parameter = time_.HasValue ?
                new ObjectParameter("Time_", time_) :
                new ObjectParameter("Time_", typeof(System.TimeSpan));
    
            var event_descriptionParameter = event_description != null ?
                new ObjectParameter("Event_description", event_description) :
                new ObjectParameter("Event_description", typeof(string));
    
            var age_limitationParameter = age_limitation.HasValue ?
                new ObjectParameter("Age_limitation", age_limitation) :
                new ObjectParameter("Age_limitation", typeof(int));
    
            var maximum_count_ticketsParameter = maximum_count_tickets.HasValue ?
                new ObjectParameter("Maximum_count_tickets", maximum_count_tickets) :
                new ObjectParameter("Maximum_count_tickets", typeof(int));
    
            var purchased_count_ticketsParameter = purchased_count_tickets.HasValue ?
                new ObjectParameter("Purchased_count_tickets", purchased_count_tickets) :
                new ObjectParameter("Purchased_count_tickets", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("stp_Update_Archive", iDParameter, name_EventParameter, event_Category_IdParameter, date_StartParameter, date_FinishParameter, сityParameter, placeParameter, time_Parameter, event_descriptionParameter, age_limitationParameter, maximum_count_ticketsParameter, purchased_count_ticketsParameter);
        }
    
        public virtual int stp_Update_Cat(Nullable<int> iD, string category)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var categoryParameter = category != null ?
                new ObjectParameter("Category", category) :
                new ObjectParameter("Category", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("stp_Update_Cat", iDParameter, categoryParameter);
        }
    
        public virtual int stp_Update_Client(Nullable<int> iD, string firstName, string lastName, Nullable<System.DateTime> bD, string email)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var bDParameter = bD.HasValue ?
                new ObjectParameter("BD", bD) :
                new ObjectParameter("BD", typeof(System.DateTime));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("stp_Update_Client", iDParameter, firstNameParameter, lastNameParameter, bDParameter, emailParameter);
        }
    
        public virtual int stp_Update_Event(Nullable<int> iD, string name_Event, Nullable<int> event_Category_Id, Nullable<System.DateTime> date_Start, Nullable<System.DateTime> date_Finish, string сity, string place, Nullable<System.TimeSpan> time_, string event_description, Nullable<int> age_limitation, Nullable<int> maximum_count_tickets, Nullable<int> purchased_count_tickets, Nullable<int> price_id)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var name_EventParameter = name_Event != null ?
                new ObjectParameter("Name_Event", name_Event) :
                new ObjectParameter("Name_Event", typeof(string));
    
            var event_Category_IdParameter = event_Category_Id.HasValue ?
                new ObjectParameter("Event_Category_Id", event_Category_Id) :
                new ObjectParameter("Event_Category_Id", typeof(int));
    
            var date_StartParameter = date_Start.HasValue ?
                new ObjectParameter("Date_Start", date_Start) :
                new ObjectParameter("Date_Start", typeof(System.DateTime));
    
            var date_FinishParameter = date_Finish.HasValue ?
                new ObjectParameter("Date_Finish", date_Finish) :
                new ObjectParameter("Date_Finish", typeof(System.DateTime));
    
            var сityParameter = сity != null ?
                new ObjectParameter("Сity", сity) :
                new ObjectParameter("Сity", typeof(string));
    
            var placeParameter = place != null ?
                new ObjectParameter("Place", place) :
                new ObjectParameter("Place", typeof(string));
    
            var time_Parameter = time_.HasValue ?
                new ObjectParameter("Time_", time_) :
                new ObjectParameter("Time_", typeof(System.TimeSpan));
    
            var event_descriptionParameter = event_description != null ?
                new ObjectParameter("Event_description", event_description) :
                new ObjectParameter("Event_description", typeof(string));
    
            var age_limitationParameter = age_limitation.HasValue ?
                new ObjectParameter("Age_limitation", age_limitation) :
                new ObjectParameter("Age_limitation", typeof(int));
    
            var maximum_count_ticketsParameter = maximum_count_tickets.HasValue ?
                new ObjectParameter("Maximum_count_tickets", maximum_count_tickets) :
                new ObjectParameter("Maximum_count_tickets", typeof(int));
    
            var purchased_count_ticketsParameter = purchased_count_tickets.HasValue ?
                new ObjectParameter("Purchased_count_tickets", purchased_count_tickets) :
                new ObjectParameter("Purchased_count_tickets", typeof(int));
    
            var price_idParameter = price_id.HasValue ?
                new ObjectParameter("Price_id", price_id) :
                new ObjectParameter("Price_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("stp_Update_Event", iDParameter, name_EventParameter, event_Category_IdParameter, date_StartParameter, date_FinishParameter, сityParameter, placeParameter, time_Parameter, event_descriptionParameter, age_limitationParameter, maximum_count_ticketsParameter, purchased_count_ticketsParameter, price_idParameter);
        }
    
        public virtual int stp_Update_Pictures_Client(Nullable<int> id, Nullable<int> clientID, string name_, byte[] picture)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var clientIDParameter = clientID.HasValue ?
                new ObjectParameter("ClientID", clientID) :
                new ObjectParameter("ClientID", typeof(int));
    
            var name_Parameter = name_ != null ?
                new ObjectParameter("Name_", name_) :
                new ObjectParameter("Name_", typeof(string));
    
            var pictureParameter = picture != null ?
                new ObjectParameter("Picture", picture) :
                new ObjectParameter("Picture", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("stp_Update_Pictures_Client", idParameter, clientIDParameter, name_Parameter, pictureParameter);
        }
    
        public virtual int stp_Update_Pictures_Event(Nullable<int> id, Nullable<int> eventID, string name_, byte[] picture)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var eventIDParameter = eventID.HasValue ?
                new ObjectParameter("EventID", eventID) :
                new ObjectParameter("EventID", typeof(int));
    
            var name_Parameter = name_ != null ?
                new ObjectParameter("Name_", name_) :
                new ObjectParameter("Name_", typeof(string));
    
            var pictureParameter = picture != null ?
                new ObjectParameter("Picture", picture) :
                new ObjectParameter("Picture", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("stp_Update_Pictures_Event", idParameter, eventIDParameter, name_Parameter, pictureParameter);
        }
    
        public virtual int stp_Update_Price(Nullable<int> id, Nullable<decimal> min_, Nullable<decimal> ave, Nullable<decimal> max_)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var min_Parameter = min_.HasValue ?
                new ObjectParameter("Min_", min_) :
                new ObjectParameter("Min_", typeof(decimal));
    
            var aveParameter = ave.HasValue ?
                new ObjectParameter("Ave", ave) :
                new ObjectParameter("Ave", typeof(decimal));
    
            var max_Parameter = max_.HasValue ?
                new ObjectParameter("Max_", max_) :
                new ObjectParameter("Max_", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("stp_Update_Price", idParameter, min_Parameter, aveParameter, max_Parameter);
        }
    
        public virtual int stp_Update_Ticket(Nullable<int> iD, Nullable<int> event_id, Nullable<int> client_Id, Nullable<decimal> price, Nullable<System.DateTime> purchase_date)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var event_idParameter = event_id.HasValue ?
                new ObjectParameter("Event_id", event_id) :
                new ObjectParameter("Event_id", typeof(int));
    
            var client_IdParameter = client_Id.HasValue ?
                new ObjectParameter("Client_Id", client_Id) :
                new ObjectParameter("Client_Id", typeof(int));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(decimal));
    
            var purchase_dateParameter = purchase_date.HasValue ?
                new ObjectParameter("Purchase_date", purchase_date) :
                new ObjectParameter("Purchase_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("stp_Update_Ticket", iDParameter, event_idParameter, client_IdParameter, priceParameter, purchase_dateParameter);
        }
    }
}
